name: Fly Deploy
on:
  push:
    branches:
      - main
  workflow_dispatch:
    
jobs:
  deploy:
    name: Deploy app
    env:
      FLASK_SECRET_KEY: ${{ secrets.FLASK_SECRET_KEY }}
      FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
      CHAMBER_API_KEY: ${{ secrets.CHAMBER_API_KEY }}
      WEBHOOK_SECRET: ${{ secrets.WEBHOOK_SECRET }}
    runs-on: ubuntu-latest
    concurrency: deploy-group
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: false  # Don't auto-checkout submodules
          
      - name: Configure Git
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          
      - name: Update Submodules
        run: |
          # Define submodule paths
          SUBMODULES=("src/grimoire" "src/chamber/pages")
          
          # Initialize submodules
          git submodule init
          git submodule update
          
          # Loop through each submodule
          for submodule in "${SUBMODULES[@]}"; do
            echo "Processing submodule: $submodule"
            
            # Remove existing submodule directory if it exists
            rm -rf "$submodule"
            
            # Enter submodule directory
            cd "$submodule"
            
            # Configure git locally for the submodule
            git config user.email "github-actions[bot]@users.noreply.github.com"
            git config user.name "github-actions[bot]"
            
            # Fetch and checkout latest main
            git fetch origin main
            git checkout main
            git pull origin main
            
            # Return to root
            cd $(git rev-parse --show-toplevel)
            
            # Update the parent repo's reference
            git add "$submodule"
            git commit -m "Update submodule $submodule to latest main" || echo "No changes to commit for $submodule"
          done

      - name: Load environment variables
        run: |
          if [ -f .env ]; then
            echo "Loading environment variables..."
            export $(grep -v '^#' .env | xargs)
            echo "Environment variables loaded"
          fi

      - uses: superfly/flyctl-actions/setup-flyctl@master
      
      - name: Set secrets on Fly.io
        run: |
          echo "Setting secrets on Fly.io..."
          flyctl secrets set \
            FLASK_SECRET_KEY="$FLASK_SECRET_KEY" \
            CHAMBER_API_KEY="$CHAMBER_API_KEY" \
            WEBHOOK_SECRET="$WEBHOOK_SECRET"
            
      - run: flyctl deploy --remote-only